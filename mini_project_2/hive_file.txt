Objective - The assignment is meant for you to apply learnings of the module on Hive on a real-life dataset.
One of the major objectives of this assignment is gaining familiarity with how an analysis works in Hive 
and how you can gain insights from large datasets.
 
Problem Statement - New York City is a thriving metropolis and just like most other cities of similar size, 
one of the biggest problems its residents face is parking. The classic combination of a huge number of cars
and a cramped geography is the exact recipe that leads to a large number of parking tickets.
 
In an attempt to scientifically analyse this phenomenon, the NYC Police Department regularly collects 
data related to parking tickets. This data is made available by NYC Open Data portal. 
We will try and perform some analysis on this data.

Download Dataset - https://data.cityofnewyork.us/browse?q=parking+tickets

Note: Consider only the year 2017 for analysis and not the Fiscal year.

Add data in docker desktop using docker command :-
Step1 :- cd C:\docker_folder\HiveDockerSetup
Step2 :- docker cp PVI_2017.csv <name-node container_id>:PVI_2017.csv
Step3 :- docker exec -it <name-node container_id> bash
Step4 :- hdfs dfs -mkdir -p /input_data/
Step5 :- hdfs dfs -put PVI_2017.csv /input_data/PVI_2017.csv
Step6 :- hdfs dfs -ls /input_data

output :-  -rw-r--r--   3 root supergroup 2086913576 2023-05-01 12:22 /input_data/PVI_2017.csv

create table :- 


CREATE EXTERNAL TABLE IF NOT EXISTS pvi_2017(
    SUMMONSNUMBER INT,
    PLATEID CHAR(100),
    REG_STATE CHAR(10),
    PLATETYPE CHAR(10),
    ISSUEDATE CHAR(15),
    VIOLATIONCODE INT,
    VEHBODYTYPE CHAR(20),
    VEHMAKE CHAR(30),
    ISSUEAGENCY CHAR(5),
    STREETCODE1 int,
    STREETCODE2 int,
    STREETCODE3 int,
    VEHEXPIREDATE CHAR(20),
    VIOLOCATION int,
    VIOPRECINCT int,
    ISSUERPRECINCT int,
    ISSUERCODE int,
    ISSUERCOMMAND char(20),
    ISSUERSQUAD CHAR(10),
    VIOLATIONTIME CHAR(20),
    TIMEFIRSTOBERSERVED CHAR(20),
    VIOLATIONCOUNTY CHAR(10),
    VIOLATIONIO char(5),
    HOUSENUMBER CHAR(20),
    STREETNAME CHAR(20),
    INTERSECTINGSTREET char(30),
    DATEFIRSTOBSERVED CHAR(20),
    LAWSECTION int,
    SUBDIVISION CHAR(5),
    VIOLATIONLEGALCODE CHAR(5),
    DAYSPARKINGINEFFECT CHAR(20),
    FROMHOURSINEFFECT CHAR(20),
    TOHOURSINEFFECT CHAR(20),
    VEHCOLOUR CHAR(20),
    UNREGISTEREDVEHICLE int,
    VEHICLEYEAR int,
    METERNUMBER CHAR(20),
    FEETFROMCURB int,
    VIOLATIONPOSTCODE CHAR(10),
    VIOLATIONDESCRIPTION CHAR(100),
    NSSV  char(5),
    HYDRVIOL char(5),
    DOUBLEPARKINGVIO char(5)
   )
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
location '/input_data/PVI_2017'
tblproperties("skip.header.line.count"="1");


above create table command works fine. 



Last 3 columns doesn't have any data

    NSSV ,
    HYDRVIOL ,
    DOUBLEPARKINGVIO 
    
    
    
    
The analysis can be divided into two parts:
 
Part-I: Examine the data

1.) Find the total number of tickets for the year.
Ans. select count(*) from pvi_2017;

2.) Find out how many unique states the cars which got parking tickets came from.
Ans. 
 select distinct(REG_STATE) from pvi_2017;
3.) Some parking tickets don’t have addresses on them, which is cause for concern. 
Find out how many such tickets there are(i.e. tickets where either "Street Code 1" or "Street Code 2" or "Street Code 3" is empty )
Ans. select count(*) from pvi_2017 where STREETCODE1 IS NULL or STREETCODE2 is NULL or STREETCODE3 is NULL;

Part-II: Aggregation tasks

1.) How often does each violation code occur? (frequency of violation codes - find the top 5)
2.) How often does each vehicle body type get a parking ticket? How about the vehicle make? (find the top 5 for both)
3.) A precinct is a police station that has a certain zone of the city under its command. Find the (5 highest) frequencies of:
      a.) Violating Precincts (this is the precinct of the zone where the violation occurred)
      b.) Issuer Precincts (this is the precinct that issued the ticket)
4.) Find the violation code frequency across 3 precincts which have issued the most number of tickets - 
do these precinct zones have an exceptionally high frequency of certain violation codes?
5.) Find out the properties of parking violations across different times of the day: The Violation Time 
field is specified in a strange format. Find a way to make this into a time attribute that you can use to divide into groups.
6.) Divide 24 hours into 6 equal discrete bins of time. The intervals you choose are at your discretion.
For each of these groups, find the 3 most commonly occurring violations
7.) Now, try another direction. For the 3 most commonly occurring violation codes, find the most common times 
of day (in terms of the bins from the previous part)
8.) Let’s try and find some seasonality in this data
      a.) First, divide the year into some number of seasons, and find frequencies of tickets for each season. (Hint: A quick Google search 
      reveals the following seasons in NYC: Spring(March, April, March); Summer(June, July, August);
      Fall(September, October, November); Winter(December, January, February))
      b.)Then, find the 3 most common violations for each of these seasons.

Note: Please ensure you make necessary optimizations to your queries like selecting the appropriate table format,
using partitioned/bucketed tables. Marks will be awarded for keeping the performance also in mind.
